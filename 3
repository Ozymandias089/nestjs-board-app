import { Body, Controller, Delete, Get, Param, Patch, Post, UsePipes, ValidationPipe } from '@nestjs/common';
import { BoardService } from './board.service';
import { Board, BoardStatus } from './board.model';
import { createBoardDTO } from './dto/create-board.dto';

@Controller('boards')
export class BoardController {
    constructor(private boardService: BoardService) {}

    @Get('/')
    getAllBoard(): Board[] {
        return this.boardService.getAllBoards();
    }
    
    @Post()
    @UsePipes(ValidationPipe) //handler level validation pipe
    createBoard(
        @Body() createBoardDTO: createBoardDTO
    ): Board {
        return this.boardService.createBoard(createBoardDTO);
    }
    
    @Get('/:id')
    getBoardById(@Param('id') id: string): Board {
        return this.boardService.getBoardById(id)
    }
    
    @Delete('/:id')
    deleteBoard(@Param('id') id: string): void {
        this.boardService.deleteBoard(id);
    }
    
    @Patch('/:id/status')
    updateBoardStatus(
        @Param('id') id: string,
        @Body('status') status: BoardStatus
    ) {
        return this.boardService.updateBoardStatus(id, status);
    }
}
